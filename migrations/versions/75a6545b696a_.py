"""empty message

Revision ID: 75a6545b696a
Revises: None
Create Date: 2019-05-16 00:36:46.256139

"""

# revision identifiers, used by Alembic.
import datetime

revision = '75a6545b696a'
down_revision = None

from alembic import op
import sqlalchemy as sa

from sqlalchemy.sql import insert
from sqlalchemy import orm


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    brands = op.create_table('brands',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Unicode(length=50), nullable=False),
        sa.Column('country_code', sa.Unicode(length=2), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    categories= op.create_table('categories',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Unicode(length=50), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    products = op.create_table('products',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Unicode(length=50), nullable=False),
        sa.Column('rating', sa.Float(), nullable=False),
        sa.Column('featured', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('expiration_date', sa.DateTime(), nullable=True),
        sa.Column('brand_id', sa.Integer(), nullable=False),
        sa.Column('items_in_stock', sa.Integer(), nullable=False),
        sa.Column('receipt_date', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    products_categories = op.create_table('products_categories',
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('category_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
        sa.PrimaryKeyConstraint('product_id', 'category_id')
    )

    # populate data
    bind = op.get_bind()

    session = orm.Session(bind=bind)

    brands_data = [
        {'name': 'Apple', 'country_code': 'US'},
        {'name': 'Milka', 'country_code': 'DE'}
    ]

    categories_data = [
        {'name': 'Mobile phones'},
        {'name': 'Food'}
    ]

    products_data = [
        {'name': 'iPhone', 'rating': 10, 'featured': True, 'items_in_stock': 10, 'receipt_date': None, 'created_at': datetime.datetime.utcnow()},
        {'name': 'Chocolate', 'rating': 7, 'featured': False, 'items_in_stock': 0, 'receipt_date': datetime.datetime.utcnow() + datetime.timedelta(days=10), 'created_at': datetime.datetime.utcnow()}
    ]

    # insert initial brands
    for brand in brands_data:
        result = session.execute(insert(brands).values(brand))
        brand['id'] = result.lastrowid

    # insert initial categories
    for category in categories_data:
        result = session.execute(insert(categories).values(category))
        category['id'] = result.lastrowid

    # insert initial products
    for i, product in enumerate(products_data):
        product['brand_id'] = brands_data[i]['id']
        result = session.execute(insert(products).values(product))
        product['id'] = result.lastrowid

        # associate product with a category
        session.execute(insert(products_categories).values({
            'product_id': product['id'],
            'category_id': categories_data[i]['id']
        }))

    session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('products_categories')
    op.drop_table('products')
    op.drop_table('categories')
    op.drop_table('brands')
    # ### end Alembic commands ###
